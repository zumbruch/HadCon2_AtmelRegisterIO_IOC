Terminator  = LF;
LockTimeout  = 5000;
ReplyTimeout  = 4000;
ReadTimeout   = 500;
WriteTimeout  = 3000;
ExtraInput    = Ignore;

#
# one wire dual switches 
#

# After processing finishes, the record contains the reply.

    key = "OW8S";
    recvKey = "%*{\nRECV|RECV} "$key" ";

OW8S {
# Example of command field(INP, "@hadcon_OW8S.proto OW8S <port>")
	ExtraInput = Ignore;
    out $key;
}

read {
# Example of command field(INP, "@hadcon_OW8S.proto read <port>")
	ExtraInput = Ignore;
    out $key;
}

write {
# Example of command field(INP, "@hadcon_OW8S.proto write <port>")
	ExtraInput = Ignore;
    out $key %x;
}

read_ID {
# Example of command field(INP, "@hadcon_OW8S.proto read_ID_intr <port>")
	ExtraInput = Ignore;
    #ID = %\${1};
    out $key %\${1};
}

read_ID_intr {
# Example of command field(INP, "@<file.proto> OW8S_read_ID(28F541F1010000F6) <port>")

	ExtraInput = Ignore;

    #ID = %\${1};
	Terminator  = CR;
	
	in $recvKey"\$1 %x";
}

write_ID {
# Example of command field(OUT, "@<file.proto> write_ID(3A2AF602000000DB,<record_RBV>) <port>")
	ExtraInput = Ignore;

    #ID  = %\${1};
    #RBV = %\${2};
#	Terminator  = CR;
	
	out $key" \$1 %x"; 
#	in  $recvKey"\$1 %(\${2}.VAL)x";
	@mismatch{};
}

OW8S_err_intr {
	# Example of command field(INP,  "@hadcon_OW8S.proto OW8S_err_intr($(ID)) $(device)")
    in "ERR%*1c "$key" \$1 %39c";
}